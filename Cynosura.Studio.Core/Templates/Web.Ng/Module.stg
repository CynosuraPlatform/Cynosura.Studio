main(model) ::= <<
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';

import { CoreModule } from '../core/core.module';
import { $model.Entity.Name$CoreModule } from '../$model.Entity.NameKebab$-core/$model.Entity.NameKebab$-core.module';
$model.Entity.DependentEntities:declareEntity(); separator="\n"$
$model.Entity.DependentEnums:declareEnum(); separator="\n"$

import { $model.Entity.Name$ListComponent } from './$model.Entity.NameKebab$-list.component';
import { $model.Entity.Name$EditComponent } from './$model.Entity.NameKebab$-edit.component';
import { $model.Entity.Name$ViewComponent } from './$model.Entity.NameKebab$-view.component';

@NgModule({
    declarations: [
        $model.Entity.Name$ListComponent,
        $model.Entity.Name$EditComponent,
        $model.Entity.Name$ViewComponent,
    ],
    imports: [
        RouterModule.forChild([
            { path: '', component: $model.Entity.Name$ListComponent },
            { path: ':id', component: $model.Entity.Name$ViewComponent }
        ]),
        CoreModule,
$model.Entity.DependentEntities:importEntity(); separator="\n"$
$model.Entity.DependentEnums:importEnum(); separator="\n"$
        $model.Entity.Name$CoreModule
    ],
    providers: [
    ],
    entryComponents: [
        $model.Entity.Name$EditComponent
    ]
})
export class $model.Entity.Name$Module {
    
}

>>

declareEntity(entity) ::= <<
import { $entity.Name$CoreModule } from '../$entity.NameKebab$-core/$entity.NameKebab$-core.module';
>>

importEntity(entity) ::= <<
        $entity.Name$CoreModule,
>>

declareEnum(enum) ::= <<
import { $enum.Name$Module } from '../$enum.NameKebab$/$enum.NameKebab$.module';
>>

importEnum(enum) ::= <<
        $enum.Name$Module,
>>
