main(model) ::= <<
import { Injectable } from "@angular/core";
import { HttpClient, HttpParams, HttpHeaders } from "@angular/common/http";

import { $model.Entity.Name$ } from "./$model.Entity.NameKebab$.model";
import { Page } from "../core/page.model";

@Injectable()
export class $model.Entity.Name$Service {
    private $model.Entity.NameLower$Url = "/api/$model.Entity.NameLower$";
    private headers = new HttpHeaders({ "Content-Type": "application/json" });

    constructor(private httpClient: HttpClient) { }

    get$model.Entity.PluralName$(pageIndex?: number, pageSize?: number): Promise<Page<$model.Entity.Name$>\> {
        const url = this.$model.Entity.NameLower$Url;

        let params = new HttpParams();

        if (pageIndex !== undefined && pageIndex !== null) {
            params = params.set("pageIndex", pageIndex.toString());
        }

        if (pageSize !== undefined && pageSize !== null) {
            params = params.set("pageSize", pageSize.toString());
        }

        return this.httpClient.get<Page<$model.Entity.Name$>\>(url, {
            params: params
        }).toPromise();
    }

    get$model.Entity.Name$($model.Entity.IdField.NameLower$: $model.Entity.IdField.JsTypeName$): Promise<$model.Entity.Name$> {
        const url = `\${this.$model.Entity.NameLower$Url}/\${$model.Entity.IdField.NameLower$}`;
        return this.httpClient.get<$model.Entity.Name$>(url)
            .toPromise();
    }

    update$model.Entity.Name$($model.Entity.NameLower$: $model.Entity.Name$): Promise<$model.Entity.Name$> {
        const url = `\${this.$model.Entity.NameLower$Url}/\${$model.Entity.NameLower$.$model.Entity.IdField.NameLower$}`;
        return this.httpClient.put<$model.Entity.Name$>(url, JSON.stringify($model.Entity.NameLower$), { headers: this.headers })
            .toPromise();
    }

    create$model.Entity.Name$($model.Entity.NameLower$: $model.Entity.Name$): Promise<$model.Entity.Name$> {
        return this.httpClient.post<$model.Entity.Name$>(this.$model.Entity.NameLower$Url, JSON.stringify($model.Entity.NameLower$), { headers: this.headers })
            .toPromise();
    }

    delete$model.Entity.Name$($model.Entity.IdField.NameLower$: $model.Entity.IdField.JsTypeName$): Promise<{}> {
        const url = `\${this.$model.Entity.NameLower$Url}/\${$model.Entity.IdField.NameLower$}`;
        return this.httpClient.delete(url)
            .toPromise();
    }
}

>>

